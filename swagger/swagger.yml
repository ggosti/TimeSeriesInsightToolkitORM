openapi: "3.0.0"

info:
  title: "Time Series Insight Toolkit Flask REST API"
  description: "An API for records fram capture events"
  version: "1.0.0"

servers:
  - url: "/api"

paths:
#   /steps:
#     get:
#       operationId: views.get_steps
#       responses:
#         '200':
#           description: Get a list of steps
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/Step'
#    post:
#      operationId: views.create_step
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Step'
#      responses:
#        '201':
#          description: Step created
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Step'
  /events:
    get:
      operationId: views.get_events
      responses:
        '200':
          description: Get the list of events.
  /groups:
    get:
      operationId: views.get_groups
      responses:
        '200':
          description: Get the list of groups.
  # /steps/{step_name}/events/{event_name}/groups/{group_name}/records:
  #   get:
  #     operationId: views.get_group_records
  #     parameters:
  #       - name: step_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: event_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: group_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: Get a list of records for a specific group in a step and event
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Aggregate'
  # /steps/{step_name}/events/{event_name}/groups/{group_name}/{version}/{record_name}:
  #   get:
  #     operationId: views.get_group_record
  #     parameters:
  #       - name: step_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: event_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: group_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: version
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: record_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: An record version in a group
  # /steps/{step_name}/events/{event_name}/groups/{group_name}/aggregates:
  #   get:
  #     operationId: views.get_group_aggregates
  #     parameters:
  #       - name: step_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: event_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: group_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: A list of aggregates for a group
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Record'
  # /steps/{step_name}/events/{event_name}/groups/{group_name}/{aggregate_name}:
  #   get:
  #     operationId: views.get_group_aggregate
  #     parameters:
  #       - name: step_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: event_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: group_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #       - name: aggregate_name
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: An aggregates for recods in a group
  #         # content:
  #         #   application/json:
  #         #     schema:
  #         #       type: array
  #         #       items:
  #         #         $ref: '#/components/schemas/Record'