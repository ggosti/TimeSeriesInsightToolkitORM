openapi: "3.0.0"

info:
  title: "Time Series Insight Toolkit Flask REST API"
  description: "An API for records fram capture events"
  version: "1.0.0"

servers:
  - url: "/api"

paths:
  /steps:
    get:
      operationId: views.get_steps
      responses:
        '200':
          description: A list of steps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Step'
#    post:
#      operationId: views.create_step
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/Step'
#      responses:
#        '201':
#          description: Step created
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/Step'
  /steps/{step_name}/events:
    get:
      operationId: views.get_step_events
      parameters:
        - name: step_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of events for a step
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
#     post:
#       operationId: views.create_event
#       parameters:
#         - name: step_id
#           in: path
#           required: true
#           schema:
#             type: integer
#         - in: requestBody
#           required: true
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Event'
#       responses:
#         '201':
#           description: Event created
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Event'
  /steps/{step_name}/events/{event_name}/groups:
    get:
      operationId: views.get_event_groups
      parameters:
        - name: step_name
          in: path
          required: true
          schema:
            type: string
        - name: event_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of groups for an event
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
#     post:
#       operationId: views.create_group
#       parameters:
#         - name: event_id
#           in: path
#           required: true
#           schema:
#             type: integer
#         - in: requestBody
#           required: true
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Group'
#       responses:
#         '201':
#           description: Group created
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Group'
  /steps/{step_name}/events/{event_name}/groups/{group_name}/records:
    get:
      operationId: views.get_group_records
      parameters:
        - name: step_name
          in: path
          required: true
          schema:
            type: string
        - name: event_name
          in: path
          required: true
          schema:
            type: string
        - name: group_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of records for a group
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Record'
#     post:
#       operationId: views.create_record
#       parameters:
#         - name: group_id
#           in: path
#           required: true
#           schema:
#             type: integer
#         - in: requestBody
#           required: true
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Record'
#       responses:
#         '201':
#           description: Record created
#           content:
#             application/json:
#               schema:
#                 $ref: '#/components/schemas/Record'

components:
  schemas:
    Step:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    Event:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        step_id:
          type: integer
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    Group:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        event_id:
          type: integer
        records:
          type: array
          items:
            $ref: '#/components/schemas/Record'
    Record:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        version:
          type: string
        group_id:
          type: integer

    Aggregate:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        version:
          type: string
        group_id:
          type: integer
        records:
          type: array
          items:
            $ref: '#/components/schemas/Record'